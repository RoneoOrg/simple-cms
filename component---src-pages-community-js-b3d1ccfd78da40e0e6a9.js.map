{"version":3,"file":"component---src-pages-community-js-b3d1ccfd78da40e0e6a9.js","mappings":"6RAsBA,OAlBkB,yCACPA,IAAAA,OAAAA,KADO,cAEHA,IAAAA,SAAAA,GAFG,gFAMCA,IAAAA,MAAAA,GAND,uBASAA,IAAAA,OAAAA,UATA,8DAcLA,IAAAA,MAAAA,GAdK,M,oBCClB,MAAMC,GAA2B,iSA2BPD,IAAAA,OAAAA,UA3BO,yBAiCpBA,IAAAA,OAAAA,KAjCoB,sBAqDjC,MAfA,YAA8C,IAAf,SAAEE,GAAY,EAC3C,OACE,QAACD,EAAD,KACGC,EAASC,KAAI,CAAC,EAA6BC,KAA9B,IAAC,MAAEC,EAAF,YAASC,EAAT,IAAsBC,GAAvB,SACZ,cAAIC,IAAKJ,IACP,aAAGK,KAAMF,EAAKG,OAAO,SAASC,IAAI,wBAChC,sBAASN,IACT,iBAAIC,U,mDCIhB,MAxCA,YAAqD,IAAlC,SAAEM,EAAF,QAAYC,EAAZ,SAAqBC,GAAY,EAClD,OACE,yBACE,QAAC,IAAD,MACE,eACEC,IAAG,IAIH,QAAC,IAAD,MACE,QAAC,IAAD,CAAaC,OAAQJ,MAEvB,QAAC,IAAD,CAAMK,OAAK,IACT,QAAC,IAAD,CAAaD,OAAQH,QAK3B,QAAC,IAAD,MACE,QAAC,IAAD,MACE,QAAC,IAAD,CAAMK,KAAM,IACV,eACEH,KAAKA,EAAAA,EAAAA,IAAF,iBACgBf,IAAAA,MAAAA,GADhB,MAIFc,EAASX,KAAI,CAAC,EAAmCgB,KAApC,IAAGd,MAAOe,EAAT,SAAuBlB,GAAxB,SACZ,QAAC,WAAD,CAAgBM,IAAKW,IACnB,QAAC,EAAD,KAAeC,IACf,QAAC,EAAD,CAAuBlB,SAAUA,cCLnD,MA/BA,YAAkC,IAAX,KAAEmB,GAAQ,EAC/B,MAAM,MAAEhB,EAAF,SAASO,EAAT,QAAmBC,EAAnB,SAA4BC,GAAaO,EAAKC,eAAeC,YAEnE,OACE,QAAC,IAAD,CAAQC,aAAW,IACjB,QAACC,EAAA,EAAD,CAAQpB,MAAOA,KACf,QAAC,EAAD,CAAWO,SAAUA,EAAUC,QAASA,EAASC,SAAUA","sources":["webpack://simple-cms-site/./src/components/section-label.js","webpack://simple-cms-site/./src/components/community-channels-list.js","webpack://simple-cms-site/./src/components/community.js","webpack://simple-cms-site/./src/pages/community.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nimport theme from '../theme';\n\nconst SectionLabel = styled.h3`\n  color: ${theme.colors.gray};\n  font-size: ${theme.fontsize[1]};\n  font-weight: 600;\n  letter-spacing: 1.5px;\n  text-transform: uppercase;\n  margin-bottom: ${theme.space[4]};\n\n  &:after {\n    background: ${theme.colors.darkGreen};\n    content: ' ';\n    display: block;\n    height: 2px;\n    margin-top: 5px;\n    width: ${theme.space[5]};\n  }\n`;\n\nexport default SectionLabel;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport theme from '../theme';\n\nconst StyledCommunityChannelsList = styled.ul`\n  margin-left: 0;\n\n  li {\n    list-style-type: none;\n    margin-bottom: 24px;\n  }\n\n  a {\n    display: block;\n    font-weight: inherit;\n    position: relative;\n\n    &:focus,\n    &:active,\n    &:hover {\n      &:before {\n        display: block;\n      }\n    }\n\n    &:before {\n      display: none;\n      content: '';\n      position: absolute;\n      width: 3px;\n      height: 100%;\n      background-color: ${theme.colors.darkGreen};\n      left: -16px;\n    }\n  }\n\n  p {\n    color: ${theme.colors.gray};\n    margin-bottom: 0;\n  }\n`;\n\nfunction CommunityChannelsList({ channels }) {\n  return (\n    <StyledCommunityChannelsList>\n      {channels.map(({ title, description, url }, idx) => (\n        <li key={idx}>\n          <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n            <strong>{title}</strong>\n            <p>{description}</p>\n          </a>\n        </li>\n      ))}\n    </StyledCommunityChannelsList>\n  );\n}\n\nexport default CommunityChannelsList;\n","import React from 'react';\nimport { css } from '@emotion/core';\n\nimport Markdownify from './markdownify';\nimport PageHero from './page-hero';\nimport HeroTitle from './hero-title';\nimport Lead from './lead';\nimport Container from './container';\nimport SectionLabel from './section-label';\nimport Page from './page';\nimport Grid from './grid';\nimport CommunityChannelsList from './community-channels-list';\nimport theme from '../theme';\n\nfunction Community({ headline, subhead, sections }) {\n  return (\n    <>\n      <PageHero>\n        <div\n          css={css`\n            margin-bottom: 20px;\n          `}\n        >\n          <HeroTitle>\n            <Markdownify source={headline} />\n          </HeroTitle>\n          <Lead light>\n            <Markdownify source={subhead} />\n          </Lead>\n        </div>\n      </PageHero>\n\n      <Container>\n        <Page>\n          <Grid cols={2}>\n            <div\n              css={css`\n                margin-bottom: ${theme.space[5]};\n              `}\n            >\n              {sections.map(({ title: sectionTitle, channels }, channelIdx) => (\n                <React.Fragment key={channelIdx}>\n                  <SectionLabel>{sectionTitle}</SectionLabel>\n                  <CommunityChannelsList channels={channels} />\n                </React.Fragment>\n              ))}\n            </div>\n          </Grid>\n        </Page>\n      </Container>\n    </>\n  );\n}\n\nexport default Community;\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { graphql } from 'gatsby';\n\nimport Layout from '../components/layout';\nimport Community from '../components/community';\n\nfunction CommunityPage({ data }) {\n  const { title, headline, subhead, sections } = data.markdownRemark.frontmatter;\n\n  return (\n    <Layout hasPageHero>\n      <Helmet title={title} />\n      <Community headline={headline} subhead={subhead} sections={sections} />\n    </Layout>\n  );\n}\n\nexport const pageQuery = graphql`\n  query communityPage {\n    markdownRemark(fileAbsolutePath: { regex: \"/community/\" }) {\n      frontmatter {\n        title\n        headline\n        subhead\n        sections {\n          title\n          channels {\n            title\n            description\n            url\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default CommunityPage;\n"],"names":["theme","StyledCommunityChannelsList","channels","map","idx","title","description","url","key","href","target","rel","headline","subhead","sections","css","source","light","cols","channelIdx","sectionTitle","data","markdownRemark","frontmatter","hasPageHero","Helmet"],"sourceRoot":""}